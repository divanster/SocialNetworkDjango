#version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: "redis:alpine"

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      sh -c "PYTHONPATH=/app:/app/backend python /app/manage.py wait_for_db &&
             PYTHONPATH=/app:/app/backend python /app/manage.py makemigrations --noinput &&
             PYTHONPATH=/app:/app/backend python /app/manage.py migrate --noinput &&
             PYTHONPATH=/app:/app/backend python /app/manage.py collectstatic --noinput &&
             daphne -b 0.0.0.0 -p 8000 config.asgi:application"
    volumes:
      - ./backend:/app
      - /Users/apple/100DayPython/SocialNetworkDjango/vol/web:/vol/web
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - ./backend/.env
    environment:
      - DEV=true

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python /app/manage.py runworker default --verbosity 2
    volumes:
      - ./backend:/app
      - /Users/apple/100DayPython/SocialNetworkDjango/vol/web:/vol/web
    depends_on:
      - db
      - redis
    env_file:
      - ./backend/.env
    environment:
      - DEV=true

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_OPTIONS=--openssl-legacy-provider
      - REACT_APP_API_URL=http://localhost:8000/api

volumes:
  postgres_data:
